<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code2arter</title>
    <link>https://code2arter.github.io/authors/code2arter/</link>
    <description>Recent content on Code2arter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Apr 2020 22:06:35 +0800</lastBuildDate>
    
	<atom:link href="https://code2arter.github.io/authors/code2arter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>单调栈</title>
      <link>https://code2arter.github.io/post/monotonous_stack/</link>
      <pubDate>Tue, 14 Apr 2020 22:06:35 +0800</pubDate>
      
      <guid>https://code2arter.github.io/post/monotonous_stack/</guid>
      <description>&lt;p&gt;栈，数据具有先进后出(FILO)的特性一种数据结构。单调栈，即保持栈内元素具有单调性，单调递增，或者单调递减。主要用来解决，&lt;strong&gt;左边第一个比我高或者右边第一个比我矮&lt;/strong&gt;之类的问题。
利用单调栈，可以优化到 O(n) 时间复杂度。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>搜索之 DFS 与 BFS</title>
      <link>https://code2arter.github.io/post/blog/</link>
      <pubDate>Fri, 10 Apr 2020 11:26:23 +0800</pubDate>
      
      <guid>https://code2arter.github.io/post/blog/</guid>
      <description>&lt;p&gt;计算机比人厉害的地方有很多，其中计算能力是重中之重。而将计算能力发挥地淋漓尽致的地方就是搜索。
许多时候人们解惑办事都是根据经验。如果能上升到公式之类的，那就是算法。
比如如何计算从1到n的一次方和，二次方和，三次方和等等。
如果不幸没有总结出一套万能公式，那人们也有对应方法，其实也可以叫算法，那就是贪心算法。
比如找零钱、比如吃自助餐（专找贵的吃，结果一下吃饱了 :D）。
有了计算机，一切都不一样的了起来。我虽然总结不出个公式，但是我可以从到到尾都给你算一遍；
我虽然一下找不出最优解，但是我可以算有情况都考虑。就是这么的霸道，这就是计算的艺术。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>